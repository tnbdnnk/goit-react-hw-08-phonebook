{"version":3,"file":"static/js/763.acf2c6f4.chunk.js","mappings":"2PAOaA,EAAY,WACrB,IAAMC,GAAWC,EAAAA,EAAAA,MAuCjB,OACIC,EAAAA,EAAAA,MAAA,QACIC,aAAa,MACbC,SAxCY,SAAAC,GAChBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cAEfR,GACIS,EAAAA,EAAAA,IAAM,CACFC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAEvCE,MAAK,SAAAC,GACiB,wBAAhBA,EAAOC,KACPC,IAAAA,KAAU,CACNC,KAAM,QACNC,MAAO,UACPC,KAAM,+CACNC,MAAO,OACPC,QAAS,sBACTC,mBAAoB,OACpBC,kBAAmB,KACnBC,MAAO,UAEY,yBAAhBV,EAAOC,OACdC,IAAAA,KAAU,CACNC,KAAM,UACNE,KAAM,0BACNC,MAAO,OACPC,QAAS,sBACTC,mBAAoB,OACpBC,kBAAmB,KACnBC,MAAO,UAEXlB,EAAKmB,QAEb,GACJ,EAMQC,UAAWC,EAAAA,EAAAA,KAASC,SAAA,EAEpBC,EAAAA,EAAAA,KAAA,SACIH,UAAWC,EAAAA,EAAAA,YACXG,QAAQ,QAAOF,SAClB,WAGDC,EAAAA,EAAAA,KAAA,SACIE,YAAY,mBACZhB,KAAK,QACLiB,KAAK,QACLC,GAAG,QACHP,UAAWC,EAAAA,EAAAA,eAEfE,EAAAA,EAAAA,KAAA,SACIH,UAAWC,EAAAA,EAAAA,YACXG,QAAQ,WAAUF,SACrB,cAGGC,EAAAA,EAAAA,KAAA,SACIE,YAAY,sBACZhB,KAAK,WACLiB,KAAK,WACLC,GAAG,WACHP,UAAWC,EAAAA,EAAAA,eAEnB1B,EAAAA,EAAAA,MAAA,UACIc,KAAK,SACLW,UAAWC,EAAAA,EAAAA,aAAiBC,SAAA,CAC/B,SACU,QAGX3B,EAAAA,EAAAA,MAAA,KAAGyB,UAAWC,EAAAA,EAAAA,WAAeC,SAAA,CAAC,yBACH,KACvBC,EAAAA,EAAAA,KAACK,EAAAA,GAAO,CACJC,GAAG,UACHT,UAAWC,EAAAA,EAAAA,cAAkBC,SAChC,kBAMjB,E,UC9Fe,SAASQ,IACpB,OACInC,EAAAA,EAAAA,MAAA,OAAA2B,SAAA,EACIC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAAAT,UACHC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aAEXC,EAAAA,EAAAA,KAAC/B,EAAS,MAGtB,C,qBCXA,KAAgB,aAAe,+BAA+B,KAAO,uBAAuB,YAAc,8BAA8B,YAAc,8BAA8B,WAAa,6BAA6B,cAAgB,gCAAgC,cAAgB,gC","sources":["components/LogInForm/LogInForm.jsx","pages/LogIn.jsx","webpack://react-homework-template/./src/cssCommonComponents/cssUtils.module.css?9a18"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from 'reduxx/auth/operations';\nimport { NavLink } from 'react-router-dom';\nimport Swal from 'sweetalert2';\n\nimport css from 'cssCommonComponents/cssUtils.module.css'\n\nexport const LogInForm = () => {\n    const dispatch = useDispatch();\n\n    const handleLogIn = e => {\n        e.preventDefault();\n\n        const form = e.currentTarget;\n\n        dispatch(\n            logIn({\n                email: form.elements.email.value,\n                password: form.elements.password.value,\n            })\n        ).then(action => {\n            if (action.type === 'auth/login/rejected') {\n                Swal.fire({\n                    icon: 'error',\n                    title: 'Oops...',\n                    text: 'Invalid email or password. Please try again.',\n                    color: '#000',\n                    padding: '12px 36px 24px 36px',\n                    confirmButtonColor: '#000',\n                    confirmButtonText: 'OK',\n                    width: '420px',\n                });\n            } else if (action.type === 'auth/login/fulfilled') {\n                Swal.fire({\n                    icon: 'success',\n                    text: 'Logged in successfully!',\n                    color: '#000',\n                    padding: '12px 36px 24px 36px',\n                    confirmButtonColor: '#000',\n                    confirmButtonText: 'OK',\n                    width: '420px',\n                });\n                form.reset();\n            }\n        })\n    };\n\n    return (\n        <form\n            autoComplete=\"off\"\n            onSubmit={handleLogIn}\n            className={css.form}\n        >\n            <label\n                className={css.form__label}\n                htmlFor=\"email\"\n            >\n                Email\n            </label>\n            <input\n                placeholder=\"Enter your email\"\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                className={css.form__input}\n            />\n            <label \n                className={css.form__label}\n                htmlFor=\"password\"\n            >\n                Password\n            </label>\n                <input \n                    placeholder=\"Enter your password\"\n                    type=\"password\" \n                    name=\"password\" \n                    id=\"password\" \n                    className={css.form__input}\n                />\n            <button\n                type=\"submit\"\n                className={css.button__dark}\n            >\n                Log In{' '}\n            </button>\n\n            <p className={css.form__text}>\n                Don't have an account?{' '}\n                <NavLink\n                    to='/signup'\n                    className={css.form__navlink}\n                >\n                    Sign Up.\n                </NavLink>\n            </p>\n        </form>\n    );\n};","import { LogInForm } from 'components/LogInForm/LogInForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function LogIn() {\n    return (\n        <div>\n            <Helmet>\n                <title>LogIn</title>\n            </Helmet>\n            <LogInForm />\n        </div>\n    );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"button__dark\":\"cssUtils_button__dark__OF3Ee\",\"form\":\"cssUtils_form__cA03x\",\"form__label\":\"cssUtils_form__label__Zmles\",\"form__input\":\"cssUtils_form__input__UgvF7\",\"form__text\":\"cssUtils_form__text__V5wSe\",\"form__navlink\":\"cssUtils_form__navlink__IwKwV\",\"button__light\":\"cssUtils_button__light__G-kJ0\"};"],"names":["LogInForm","dispatch","useDispatch","_jsxs","autoComplete","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","then","action","type","Swal","icon","title","text","color","padding","confirmButtonColor","confirmButtonText","width","reset","className","css","children","_jsx","htmlFor","placeholder","name","id","NavLink","to","LogIn","Helmet"],"sourceRoot":""}