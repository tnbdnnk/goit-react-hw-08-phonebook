{"version":3,"file":"static/js/358.3f2e693e.chunk.js","mappings":"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","sources":["hooks/useContact.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/SortingButtons/SortingButtons.module.css?f663","components/SortingButtons/SortingButtons.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx","webpack://react-homework-template/./src/cssCommonComponents/cssUtils.module.css?9a18"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport {\n    getContacts,\n    getError,\n    getLoading,\n    getRecentlyAdded,\n    getSortedAlphabetic,\n    getVisibleContacts,\n} from 'reduxx/contacts/selectors';\n\nexport const useContacts = () => {\n    const contacts = useSelector(getContacts);\n    const visibleContacts = useSelector(getVisibleContacts);\n    const error = useSelector(getError);\n    const isLoading = useSelector(getLoading);\n    const sortedAlphabetic = useSelector(getSortedAlphabetic);\n    const recentlyAdded = useSelector(getRecentlyAdded);\n\n    return {\n        contacts,\n        visibleContacts,\n        error,\n        isLoading,\n        sortedAlphabetic,\n        recentlyAdded,\n    };\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactForm__wrap\":\"ContactForm_contactForm__wrap__nZ3wG\",\"contactForm__title\":\"ContactForm_contactForm__title__OassT\",\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactForm__input\":\"ContactForm_contactForm__input__k3i+4\",\"contactForm__label\":\"ContactForm_contactForm__label__LWT6p\"};","import { useDispatch } from \"react-redux\";\nimport { addContact } from \"reduxx/contacts/operations\";\nimport { useContacts } from \"hooks/useContact\";\nimport Swal from \"sweetalert2\";\n\nimport css from './ContactForm.module.css';\nimport cssUtils from 'cssCommonComponents/cssUtils.module.css';\n\nconst ContactForm = () => {\n    const dispatch = useDispatch();\n    const { contacts } = useContacts();\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        const { name, number } = e.target;\n        const contact = { name: name.value, number: number.value };\n\n        if (contacts.find(existingContact => existingContact.name.toLowerCase() === name.value.toLowerCase())) {\n            Swal.fire({\n                title: `${contact.name}`,\n                text: 'is already in your contacts.',\n                color: '#000',\n                padding: '12px 36px 24px 36px',\n                confirmButtonColor: '#000',\n                confirmButtonText: 'OK',\n                width: '420px',\n            })\n        } else {\n            dispatch(addContact(contact));\n        }\n        e.target.reset();\n    }\n\n    return (\n        <div className={css.contactForm__wrap}>\n            <h2 className={css.contactForm__title}>Phonebook</h2>\n            <form\n                onSubmit={handleSubmit}\n                className={css.contactForm}\n            >\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n                    required\n                    placeholder=\"Name\"\n                    className={css.contactForm__input}\n                />\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    placeholder=\"Phone\"\n                    className={css.contactForm__input}\n                />\n                <button className={cssUtils.button__dark} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        </div>\n    );\n}\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"filter__input\":\"Filter_filter__input__toa89\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'reduxx/contacts/filterSlice';\nimport { getFilter } from 'reduxx/contacts/selectors';\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n\n    const showFilteredContacts = e => {\n        dispatch(filterContacts(e.target.value));\n    };\n\n    return (\n        <input\n            placeholder=\"Find contacts\"\n            className={css.filter__input}\n            value={filter.filter}\n            type=\"search\"\n            onChange={showFilteredContacts}\n        />\n    );\n};","import React from \"react\";\nimport { ThreeCircles } from \"react-loader-spinner\";\n\nconst Loader = () => {\n    <div>\n        <ThreeCircles \n            visible={true}\n            height=\"200\"\n            width=\"200\"\n            color=\"#000000\"\n            ariaLabel=\"three-circles-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n        />\n    </div>\n}\n\nexport default Loader;","// extracted by mini-css-extract-plugin\nexport default {\"sortBtns__wrapper\":\"SortingButtons_sortBtns__wrapper__Ol6ps\",\"sortBtns\":\"SortingButtons_sortBtns__iQ04H\"};","import { useDispatch } from \"react-redux\";\nimport { sortByAdded, sortByName } from \"reduxx/contacts/contactSlice\";\n\nimport css from './SortingButtons.module.css';\n\nconst SortingButtons = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <div className={css.sortBtns__wrapper}>\n            <button\n                onClick={() => dispatch(sortByName())}\n                className={css.sortBtns}\n            >\n                Sort by name \n            </button>\n            <button\n                onClick={() => dispatch(sortByAdded())}\n                className={css.sortBtns}\n            >\n                Recently added\n            </button>\n        </div>\n    )\n}\n\nexport default SortingButtons;","// extracted by mini-css-extract-plugin\nexport default {\"contacts__span\":\"ContactsList_contacts__span__AM3Qd\",\"contacts__list\":\"ContactsList_contacts__list__0rgaD\",\"contacts__item\":\"ContactsList_contacts__item__Bl6YX\",\"contacts__button\":\"ContactsList_contacts__button__xkM5F\"};","import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"reduxx/contacts/operations\";\nimport { useContacts } from \"hooks/useContact\";\nimport Loader from \"components/Loader/Loader\";\nimport SortingButtons from \"components/SortingButtons/SortingButtons\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Swal from \"sweetalert2\";\n\nimport css from './ContactsList.module.css';\n\nconst ContactList = () => {\n    const dispatch = useDispatch();\n    const { visibleContacts } = useContacts();\n    const { isLoading } = useContacts();\n\n    const handleDelete = id => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            color: '#000',\n            padding: '12px 36px 24px 36px',\n            // icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#000',\n            cancelButtonColor: '#CD4631',\n            confirmButtonText: 'Yes, delete!',\n            width: '420px',\n            \n        }).then(result => {\n            if (result.isConfirmed) {\n                dispatch(deleteContact(id));\n                Swal.fire({\n                    title: 'Deleted!',\n                    text: 'Your file has been deleted.',\n                    color: '#000',\n                    confirmButtonColor: '#000',\n                    width: '420px',\n                    padding: '12px 36px 24px 36px',\n                });\n            }\n        });\n    }\n\n    return (\n        <div>\n            <SortingButtons />\n            {isLoading ? (\n                <span>\n                    {' '}\n                    <Loader color={'#CD4631'} size={'50'} />\n                </span>\n            ) : (\n                    <ul className={css.contacts__list}>\n                        {visibleContacts.map(({ name, number, id }) => {\n                            return (\n                                <li\n                                    data-id={id}\n                                    key={id}\n                                    className={css.contacts__item}\n                                >\n                                    {name} : {number}\n                                    <div>\n                                        <button\n                                            type=\"button\"\n                                            onClick={() => handleDelete(id)}\n                                            className={css.contacts__button}\n                                        >\n                                            {isLoading ? (\n                                                <Loader color={'#CD4631'} size={'20'} />\n                                            ) : (\n                                                <DeleteIcon size=\"10\" />\n                                            )}\n                                        </button>\n                                    </div>\n                                </li>\n                            )\n                        })}\n                </ul>\n            )}\n        </div>\n    )\n}\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"contacts__section\":\"Contacts_contacts__section__wRF5v\",\"contacts__wrap\":\"Contacts_contacts__wrap__7vqWm\",\"contactsList__wrap\":\"Contacts_contactsList__wrap__ORqhN\",\"contacts__title\":\"Contacts_contacts__title__ZEWHT\",\"contacts__wrapper\":\"Contacts_contacts__wrapper__S9QJO\",\"contacts__message\":\"Contacts_contacts__message__BuTJu\"};","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { HelmetProvider } from 'react-helmet-async';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport ContactList from 'components/ContactsList/ContactsList';\nimport { useContacts } from 'hooks/useContact';\nimport { fetchAll } from 'reduxx/contacts/operations';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const { contacts } = useContacts();\n\n    useEffect(() => {\n        dispatch(fetchAll());\n    }, [dispatch]);\n\n    return (\n        <section className={css.contacts__section}>\n            <HelmetProvider>\n                <div className={css.contacts__wrap}>\n                    <ContactForm />\n                </div>\n                <div className={css.contactsList__wrap}>\n                    <h2 className={css.contacts__title}>Contacts</h2>\n                    <div className={css.contacts__wrapper}>\n                        <Filter />\n                        {contacts.length > 0 ? (\n                            <ContactList />\n                        ) : (\n                            <p className={css.contacts__message}>Add your first contact</p>\n                        )}\n                    </div>\n                </div>\n            </HelmetProvider>\n        </section>\n    );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"button__dark\":\"cssUtils_button__dark__OF3Ee\",\"form\":\"cssUtils_form__cA03x\",\"form__label\":\"cssUtils_form__label__Zmles\",\"form__input\":\"cssUtils_form__input__UgvF7\",\"form__text\":\"cssUtils_form__text__V5wSe\",\"form__navlink\":\"cssUtils_form__navlink__IwKwV\",\"button__light\":\"cssUtils_button__light__G-kJ0\"};"],"names":["useContacts","contacts","useSelector","getContacts","visibleContacts","getVisibleContacts","error","getError","isLoading","getLoading","sortedAlphabetic","getSortedAlphabetic","recentlyAdded","getRecentlyAdded","dispatch","useDispatch","_jsxs","className","css","children","_jsx","onSubmit","e","preventDefault","_e$target","target","name","number","contact","value","find","existingContact","toLowerCase","Swal","title","concat","text","color","padding","confirmButtonColor","confirmButtonText","width","addContact","reset","type","required","placeholder","cssUtils","Filter","filter","getFilter","onChange","filterContacts","ThreeCircles","onClick","sortByName","sortByAdded","SortingButtons","Loader","size","map","_ref","id","showCancelButton","cancelButtonColor","then","result","isConfirmed","deleteContact","handleDelete","DeleteIcon","useEffect","fetchAll","HelmetProvider","ContactForm","length","ContactList"],"sourceRoot":""}